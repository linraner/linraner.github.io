<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Frank</title>
  
  <subtitle>Your heart is free. Have the courage to follow it.</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://linraner.github.io/"/>
  <updated>2018-02-22T03:30:57.264Z</updated>
  <id>http://linraner.github.io/</id>
  
  <author>
    <name>Frank</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>2017第八届蓝桥杯C/C++ B组省赛题解</title>
    <link href="http://linraner.github.io/2018/01/22/2017%E7%AC%AC%E5%85%AB%E5%B1%8A%E8%93%9D%E6%A1%A5%E6%9D%AFC-C-B%E7%BB%84%E7%9C%81%E8%B5%9B%E9%A2%98%E8%A7%A3/"/>
    <id>http://linraner.github.io/2018/01/22/2017第八届蓝桥杯C-C-B组省赛题解/</id>
    <published>2018-01-22T13:21:36.000Z</published>
    <updated>2018-02-22T03:30:57.264Z</updated>
    
    <content type="html"><![CDATA[<h2 id="第一题"><a href="#第一题" class="headerlink" title="第一题"></a>第一题</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div></pre></td><td class="code"><pre><div class="line">标题： 购物单</div><div class="line"></div><div class="line">    小明刚刚找到工作，老板人很好，只是老板夫人很爱购物。老板忙的时候经常让小明帮忙到商场代为购物。小明很厌烦，但又不好推辞。</div><div class="line"></div><div class="line">    这不，XX大促销又来了！老板夫人开出了长长的购物单，都是有打折优惠的。</div><div class="line">    小明也有个怪癖，不到万不得已，从不刷卡，直接现金搞定。</div><div class="line">    现在小明很心烦，请你帮他计算一下，需要从取款机上取多少现金，才能搞定这次购物。</div><div class="line"></div><div class="line">    取款机只能提供100元面额的纸币。小明想尽可能少取些现金，够用就行了。</div><div class="line">    你的任务是计算出，小明最少需要取多少现金。</div><div class="line"></div><div class="line">以下是让人头疼的购物单，为了保护隐私，物品名称被隐藏了。</div><div class="line">-----------------</div><div class="line">****     180.90       88折</div><div class="line">****      10.25       65折</div><div class="line">****      56.14        9折</div><div class="line">****     104.65        9折</div><div class="line">****     100.30       88折</div><div class="line">****     297.15        半价</div><div class="line">****      26.75       65折</div><div class="line">****     130.62        半价</div><div class="line">****     240.28       58折</div><div class="line">****     270.62        8折</div><div class="line">****     115.87       88折</div><div class="line">****     247.34       95折</div><div class="line">****      73.21        9折</div><div class="line">****     101.00        半价</div><div class="line">****      79.54        半价</div><div class="line">****     278.44        7折</div><div class="line">****     199.26        半价</div><div class="line">****      12.97        9折</div><div class="line">****     166.30       78折</div><div class="line">****     125.50       58折</div><div class="line">****      84.98        9折</div><div class="line">****     113.35       68折</div><div class="line">****     166.57        半价</div><div class="line">****      42.56        9折</div><div class="line">****      81.90       95折</div><div class="line">****     131.78        8折</div><div class="line">****     255.89       78折</div><div class="line">****     109.17        9折</div><div class="line">****     146.69       68折</div><div class="line">****     139.33       65折</div><div class="line">****     141.16       78折</div><div class="line">****     154.74        8折</div><div class="line">****      59.42        8折</div><div class="line">****      85.44       68折</div><div class="line">****     293.70       88折</div><div class="line">****     261.79       65折</div><div class="line">****      11.30       88折</div><div class="line">****     268.27       58折</div><div class="line">****     128.29       88折</div><div class="line">****     251.03        8折</div><div class="line">****     208.39       75折</div><div class="line">****     128.88       75折</div><div class="line">****      62.06        9折</div><div class="line">****     225.87       75折</div><div class="line">****      12.89       75折</div><div class="line">****      34.28       75折</div><div class="line">****      62.16       58折</div><div class="line">****     129.12        半价</div><div class="line">****     218.37        半价</div><div class="line">****     289.69        8折</div><div class="line">--------------------</div><div class="line"></div><div class="line">需要说明的是，88折指的是按标价的88%计算，而8折是按80%计算，余者类推。</div><div class="line">特别地，半价是按50%计算。</div><div class="line"></div><div class="line">请提交小明要从取款机上提取的金额，单位是元。</div><div class="line">答案是一个整数，类似4300的样子，结尾必然是00，不要填写任何多余的内容。</div><div class="line"></div><div class="line"></div><div class="line">特别提醒：不许携带计算器入场，也不能打开手机。</div></pre></td></tr></table></figure><ul><li>善用记事本的查找替换23333333333</li><li>答案 ： 5200</li></ul><figure class="highlight cpp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line"><span class="comment">//OUTPUT : 5136.86</span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</div><div class="line">    freopen(<span class="string">"1.txt"</span>,<span class="string">"r"</span>,<span class="built_in">stdin</span>);</div><div class="line">    <span class="keyword">double</span> sum = <span class="number">0</span>, a, b;</div><div class="line">    <span class="keyword">while</span>(<span class="built_in">scanf</span>(<span class="string">" %lf %lf"</span>, &amp;a, &amp;b) == <span class="number">2</span>) &#123;</div><div class="line">        sum = sum + a * b / <span class="number">100</span>;</div><div class="line">    &#125;</div><div class="line">    <span class="built_in">cout</span> &lt;&lt; sum &lt;&lt; <span class="built_in">endl</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure><h2 id="第二题"><a href="#第二题" class="headerlink" title="第二题"></a>第二题</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line">标题：等差素数列</div><div class="line"></div><div class="line">2,3,5,7,11,13,....是素数序列。</div><div class="line">类似：7,37,67,97,127,157 这样完全由素数组成的等差数列，叫等差素数数列。</div><div class="line">上边的数列公差为30，长度为6。</div><div class="line"></div><div class="line">2004年，格林与华人陶哲轩合作证明了：存在任意长度的素数等差数列。</div><div class="line">这是数论领域一项惊人的成果！</div><div class="line"></div><div class="line">有这一理论为基础，请你借助手中的计算机，满怀信心地搜索：</div><div class="line"></div><div class="line">长度为10的等差素数列，其公差最小值是多少？</div><div class="line"></div><div class="line">注意：需要提交的是一个整数，不要填写任何多余的内容和说明文字。</div></pre></td></tr></table></figure><ul><li>素数打表后寻找等差数列</li></ul><figure class="highlight cpp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> MAX 1000007</span></div><div class="line"><span class="function"><span class="keyword">bool</span> <span class="title">is_prime</span><span class="params">(<span class="keyword">int</span> a)</span> </span>&#123;</div><div class="line">    <span class="keyword">if</span> (a &lt; <span class="number">2</span>)</div><div class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</div><div class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">2</span>; i * i &lt;= a; i++) &#123;</div><div class="line">        <span class="keyword">if</span> (a % i == <span class="number">0</span>)</div><div class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</div><div class="line">&#125;</div><div class="line"><span class="keyword">int</span> prime[MAX], k = <span class="number">0</span>;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</div><div class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; MAX; i++) &#123;</div><div class="line">        <span class="keyword">if</span> (is_prime(i))</div><div class="line">            prime[k++] = i;</div><div class="line">    &#125;</div><div class="line">    <span class="comment">//cout &lt;&lt; k &lt;&lt; endl;//prime num </span></div><div class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">1007</span>; i++) &#123;<span class="comment">//尝试在1000内筛选 </span></div><div class="line">        <span class="keyword">int</span> a1 = prime[i], cnt, flag = <span class="number">0</span>, temp = <span class="number">0</span>;</div><div class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> d = <span class="number">1</span>; d &lt; <span class="number">666</span>; d++) &#123;</div><div class="line">            cnt = <span class="number">1</span>;</div><div class="line">            <span class="keyword">while</span> (is_prime(a1 + cnt * d)) &#123;</div><div class="line">                cnt++;</div><div class="line">                <span class="keyword">if</span> (cnt == <span class="number">10</span>) &#123;</div><div class="line">                    flag = <span class="number">1</span>;</div><div class="line">                    temp = d;</div><div class="line">                    <span class="keyword">break</span>;</div><div class="line">                &#125;</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">if</span> (flag == <span class="number">1</span>)</div><div class="line">            <span class="built_in">cout</span> &lt;&lt;  temp &lt;&lt; <span class="built_in">endl</span>;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure><h2 id="第三题"><a href="#第三题" class="headerlink" title="第三题"></a>第三题</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div></pre></td><td class="code"><pre><div class="line">标题：承压计算</div><div class="line"></div><div class="line">X星球的高科技实验室中整齐地堆放着某批珍贵金属原料。</div><div class="line"></div><div class="line">每块金属原料的外形、尺寸完全一致，但重量不同。</div><div class="line">金属材料被严格地堆放成金字塔形。</div><div class="line"></div><div class="line">                             7 </div><div class="line">                            5 8 </div><div class="line">                           7 8 8 </div><div class="line">                          9 2 7 2 </div><div class="line">                         8 1 4 9 1 </div><div class="line">                        8 1 8 8 4 1 </div><div class="line">                       7 9 6 1 4 5 4 </div><div class="line">                      5 6 5 5 6 9 5 6 </div><div class="line">                     5 5 4 7 9 3 5 5 1 </div><div class="line">                    7 5 7 9 7 4 7 3 3 1 </div><div class="line">                   4 6 4 5 5 8 8 3 2 4 3 </div><div class="line">                  1 1 3 3 1 6 6 5 5 4 4 2 </div><div class="line">                 9 9 9 2 1 9 1 9 2 9 5 7 9 </div><div class="line">                4 3 3 7 7 9 3 6 1 3 8 8 3 7 </div><div class="line">               3 6 8 1 5 3 9 5 8 3 8 1 8 3 3 </div><div class="line">              8 3 2 3 3 5 5 8 5 4 2 8 6 7 6 9 </div><div class="line">             8 1 8 1 8 4 6 2 2 1 7 9 4 2 3 3 4 </div><div class="line">            2 8 4 2 2 9 9 2 8 3 4 9 6 3 9 4 6 9 </div><div class="line">           7 9 7 4 9 7 6 6 2 8 9 4 1 8 1 7 2 1 6 </div><div class="line">          9 2 8 6 4 2 7 9 5 4 1 2 5 1 7 3 9 8 3 3 </div><div class="line">         5 2 1 6 7 9 3 2 8 9 5 5 6 6 6 2 1 8 7 9 9 </div><div class="line">        6 7 1 8 8 7 5 3 6 5 4 7 3 4 6 7 8 1 3 2 7 4 </div><div class="line">       2 2 6 3 5 3 4 9 2 4 5 7 6 6 3 2 7 2 4 8 5 5 4 </div><div class="line">      7 4 4 5 8 3 3 8 1 8 6 3 2 1 6 2 6 4 6 3 8 2 9 6 </div><div class="line">     1 2 4 1 3 3 5 3 4 9 6 3 8 6 5 9 1 5 3 2 6 8 8 5 3 </div><div class="line">    2 2 7 9 3 3 2 8 6 9 8 4 4 9 5 8 2 6 3 4 8 4 9 3 8 8 </div><div class="line">   7 7 7 9 7 5 2 7 9 2 5 1 9 2 6 5 3 9 3 5 7 3 5 4 2 8 9 </div><div class="line">  7 7 6 6 8 7 5 5 8 2 4 7 7 4 7 2 6 9 2 1 8 2 9 8 5 7 3 6 </div><div class="line"> 5 9 4 5 5 7 5 5 6 3 5 3 9 5 8 9 5 4 1 2 6 1 4 3 5 3 2 4 1 </div><div class="line">X X X X X X X X X X X X X X X X X X X X X X X X X X X X X X </div><div class="line"></div><div class="line">其中的数字代表金属块的重量（计量单位较大）。</div><div class="line">最下一层的X代表30台极高精度的电子秤。</div><div class="line"></div><div class="line">假设每块原料的重量都十分精确地平均落在下方的两个金属块上，</div><div class="line">最后，所有的金属块的重量都严格精确地平分落在最底层的电子秤上。</div><div class="line">电子秤的计量单位很小，所以显示的数字很大。</div><div class="line"></div><div class="line">工作人员发现，其中读数最小的电子秤的示数为：2086458231</div><div class="line"></div><div class="line">请你推算出：读数最大的电子秤的示数为多少？</div><div class="line"></div><div class="line">注意：需要提交的是一个整数，不要填写任何多余的内容。</div></pre></td></tr></table></figure><ul><li>答案 ： 72665192664</li></ul><figure class="highlight cpp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"><span class="keyword">double</span> a[<span class="number">31</span>][<span class="number">31</span>] = &#123;<span class="number">0</span>&#125;;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</div><div class="line">    <span class="keyword">double</span> max = <span class="number">-1e10</span>, min = <span class="number">1e10</span>;</div><div class="line">    freopen(<span class="string">"3.txt"</span>, <span class="string">"r"</span>, <span class="built_in">stdin</span>);</div><div class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">29</span>; i++) &#123;</div><div class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt;= i; j++) &#123;</div><div class="line">            <span class="built_in">cin</span> &gt;&gt; a[i][j];</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= <span class="number">29</span>; i++) &#123;</div><div class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt;= i; j++) &#123;</div><div class="line">            <span class="keyword">if</span> (j == <span class="number">0</span>) &#123;</div><div class="line">                a[i][j] += a[i<span class="number">-1</span>][<span class="number">0</span>]/<span class="number">2.0</span>;   </div><div class="line">            &#125; <span class="keyword">else</span> &#123;</div><div class="line">                a[i][j] += a[i<span class="number">-1</span>][j<span class="number">-1</span>]/<span class="number">2.0</span> + a[i<span class="number">-1</span>][j]/<span class="number">2.0</span>;</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt;= <span class="number">29</span>; i++) &#123;</div><div class="line">        <span class="keyword">if</span> (a[<span class="number">29</span>][i] &lt; min)</div><div class="line">            min = a[<span class="number">29</span>][i];</div><div class="line">        <span class="keyword">if</span> (a[<span class="number">29</span>][i] &gt; max)</div><div class="line">            max = a[<span class="number">29</span>][i];</div><div class="line">    &#125;</div><div class="line">    <span class="comment">//大数输出用printf,cout省略一部分 </span></div><div class="line">    <span class="built_in">printf</span>(<span class="string">"%lf\n"</span>, <span class="number">2086458231</span>/min*max);</div><div class="line">&#125;</div></pre></td></tr></table></figure><h2 id="第四题"><a href="#第四题" class="headerlink" title="第四题"></a>第四题</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">标题：方格分割</div><div class="line"></div><div class="line">6x6的方格，沿着格子的边线剪开成两部分。</div><div class="line">要求这两部分的形状完全相同。</div><div class="line"></div><div class="line">如图：p1.png, p2.png, p3.png 就是可行的分割法。</div><div class="line"></div><div class="line">试计算：</div><div class="line">包括这3种分法在内，一共有多少种不同的分割方法。</div><div class="line">注意：旋转对称的属于同一种分割法。</div><div class="line"></div><div class="line">请提交该整数，不要填写任何多余的内容或说明文字。</div></pre></td></tr></table></figure><figure class="highlight cpp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"></div><div class="line"></div></pre></td></tr></table></figure><h2 id="第五题"><a href="#第五题" class="headerlink" title="第五题"></a>第五题</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div></pre></td><td class="code"><pre><div class="line">标题：取数位</div><div class="line"></div><div class="line">求1个整数的第k位数字有很多种方法。</div><div class="line">以下的方法就是一种。</div><div class="line"></div><div class="line"></div><div class="line">// 求x用10进制表示时的数位长度 </div><div class="line">int len(int x)&#123;</div><div class="line">    if(x&lt;10) return 1;</div><div class="line">    return len(x/10)+1;</div><div class="line">&#125;</div><div class="line">    </div><div class="line">// 取x的第k位数字</div><div class="line">int f(int x, int k)&#123;</div><div class="line">    if(len(x)-k==0) return x%10;</div><div class="line">    return _____________________;  //填空</div><div class="line">&#125;</div><div class="line">    </div><div class="line">int main()</div><div class="line">&#123;</div><div class="line">    int x = 23574;</div><div class="line">    printf(&quot;%d\n&quot;, f(x,3));</div><div class="line">    return 0;</div><div class="line">&#125;</div><div class="line"></div><div class="line">对于题目中的测试数据，应该打印5。</div><div class="line"></div><div class="line">请仔细分析源码，并补充划线部分所缺少的代码。</div><div class="line"></div><div class="line">注意：只提交缺失的代码，不要填写任何已有内容或说明性的文字。</div></pre></td></tr></table></figure><ul><li>答案 ： <code>f(x/10,k)</code></li></ul><h2 id="第六题"><a href="#第六题" class="headerlink" title="第六题"></a>第六题</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div></pre></td><td class="code"><pre><div class="line"></div><div class="line">标题：最大公共子串</div><div class="line"></div><div class="line">最大公共子串长度问题就是：</div><div class="line">求两个串的所有子串中能够匹配上的最大长度是多少。</div><div class="line"></div><div class="line">比如：&quot;abcdkkk&quot; 和 &quot;baabcdadabc&quot;，</div><div class="line">可以找到的最长的公共子串是&quot;abcd&quot;,所以最大公共子串长度为4。</div><div class="line"></div><div class="line">下面的程序是采用矩阵法进行求解的，这对串的规模不大的情况还是比较有效的解法。</div><div class="line"></div><div class="line">请分析该解法的思路，并补全划线部分缺失的代码。</div><div class="line"></div><div class="line"></div><div class="line">#include &lt;stdio.h&gt;</div><div class="line">#include &lt;string.h&gt;</div><div class="line"></div><div class="line">#define N 256</div><div class="line">int f(const char* s1, const char* s2)</div><div class="line">&#123;</div><div class="line">    int a[N][N];</div><div class="line">    int len1 = strlen(s1);</div><div class="line">    int len2 = strlen(s2);</div><div class="line">    int i,j;</div><div class="line">    </div><div class="line">    memset(a,0,sizeof(int)*N*N);</div><div class="line">    int max = 0;</div><div class="line">    for(i=1; i&lt;=len1; i++)&#123;</div><div class="line">        for(j=1; j&lt;=len2; j++)&#123;</div><div class="line">            if(s1[i-1]==s2[j-1]) &#123;</div><div class="line">                a[i][j] = __________________________;  //填空</div><div class="line">                if(a[i][j] &gt; max) max = a[i][j];</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">    </div><div class="line">    return max;</div><div class="line">&#125;</div><div class="line"></div><div class="line">int main()</div><div class="line">&#123;</div><div class="line">    printf(&quot;%d\n&quot;, f(&quot;abcdkkk&quot;, &quot;baabcdadabc&quot;));</div><div class="line">    return 0;</div><div class="line">&#125;</div><div class="line"></div><div class="line">注意：只提交缺少的代码，不要提交已有的代码和符号。也不要提交说明性文字。</div></pre></td></tr></table></figure><ul><li></li></ul><h2 id="第七题"><a href="#第七题" class="headerlink" title="第七题"></a>第七题</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div></pre></td><td class="code"><pre><div class="line">标题：日期问题</div><div class="line"></div><div class="line">小明正在整理一批历史文献。这些历史文献中出现了很多日期。小明知道这些日期都在1960年1月1日至2059年12月31日。令小明头疼的是，这些日期采用的格式非常不统一，有采用年/月/日的，有采用月/日/年的，还有采用日/月/年的。更加麻烦的是，年份也都省略了前两位，使得文献上的一个日期，存在很多可能的日期与其对应。  </div><div class="line"></div><div class="line">比如02/03/04，可能是2002年03月04日、2004年02月03日或2004年03月02日。  </div><div class="line"></div><div class="line">给出一个文献上的日期，你能帮助小明判断有哪些可能的日期对其对应吗？</div><div class="line"></div><div class="line">输入</div><div class="line">----</div><div class="line">一个日期，格式是&quot;AA/BB/CC&quot;。  (0 &lt;= A, B, C &lt;= 9)  </div><div class="line"></div><div class="line">输入</div><div class="line">----</div><div class="line">输出若干个不相同的日期，每个日期一行，格式是&quot;yyyy-MM-dd&quot;。多个日期按从早到晚排列。  </div><div class="line"></div><div class="line">样例输入</div><div class="line">----</div><div class="line">02/03/04  </div><div class="line"></div><div class="line">样例输出</div><div class="line">----</div><div class="line">2002-03-04  </div><div class="line">2004-02-03  </div><div class="line">2004-03-02  </div><div class="line"></div><div class="line">资源约定：</div><div class="line">峰值内存消耗（含虚拟机） &lt; 256M</div><div class="line">CPU消耗  &lt; 1000ms</div><div class="line"></div><div class="line"></div><div class="line">请严格按要求输出，不要画蛇添足地打印类似：“请您输入...” 的多余内容。</div><div class="line"></div><div class="line">注意：</div><div class="line">main函数需要返回0;</div><div class="line">只使用ANSI C/ANSI C++ 标准;</div><div class="line">不要调用依赖于编译环境或操作系统的特殊函数。</div><div class="line">所有依赖的函数必须明确地在源文件中 #include &lt;xxx&gt;</div><div class="line">不能通过工程设置而省略常用头文件。</div><div class="line"></div><div class="line">提交程序时，注意选择所期望的语言类型和编译器类型。</div></pre></td></tr></table></figure><h2 id="第八题"><a href="#第八题" class="headerlink" title="第八题"></a>第八题</h2><h2 id="第九题"><a href="#第九题" class="headerlink" title="第九题"></a>第九题</h2><h2 id="第十题"><a href="#第十题" class="headerlink" title="第十题"></a>第十题</h2>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;第一题&quot;&gt;&lt;a href=&quot;#第一题&quot; class=&quot;headerlink&quot; title=&quot;第一题&quot;&gt;&lt;/a&gt;第一题&lt;/h2&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;d
      
    
    </summary>
    
    
      <category term="蓝桥杯  算法" scheme="http://linraner.github.io/tags/%E8%93%9D%E6%A1%A5%E6%9D%AF-%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>数论初步</title>
    <link href="http://linraner.github.io/2017/12/31/%E6%95%B0%E8%AE%BA%E5%88%9D%E6%AD%A5/"/>
    <id>http://linraner.github.io/2017/12/31/数论初步/</id>
    <published>2017-12-31T10:57:58.000Z</published>
    <updated>2018-01-06T14:06:38.426Z</updated>
    
    <content type="html"><![CDATA[<p>数论被“数学王子”高斯誉为整个数学王国的皇后</p><h2 id="欧几里得算法"><a href="#欧几里得算法" class="headerlink" title="欧几里得算法"></a>欧几里得算法</h2><h3 id="最大公约数"><a href="#最大公约数" class="headerlink" title="最大公约数"></a>最大公约数</h3><p>欧几里得的辗转相除法计算的是两个自然数a和b的最大公约数g</p><h4 id="代码示例"><a href="#代码示例" class="headerlink" title="代码示例"></a>代码示例</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">//递归</div><div class="line">int gcd(int a, int b) &#123;</div><div class="line">    return b == 0 ? a : gcd(b, a % b);</div><div class="line">&#125;</div><div class="line">//迭代</div><div class="line">int gcd(int a, int b) &#123;</div><div class="line">    while(b != 0) &#123;</div><div class="line">        int r = b;</div><div class="line">        b = a % b;</div><div class="line">        a = r;</div><div class="line">    &#125;</div><div class="line">    return a;</div><div class="line">&#125;</div></pre></td></tr></table></figure><h3 id="唯一分解定理"><a href="#唯一分解定理" class="headerlink" title="唯一分解定理"></a>唯一分解定理</h3><h3 id="扩展欧几里得算法"><a href="#扩展欧几里得算法" class="headerlink" title="扩展欧几里得算法"></a>扩展欧几里得算法</h3><p><a href="">题目</a></p><p>直线上的点。求直线<code>ax+by+c=0</code>上有多少整数点(x,y)满足x&lt;-[x1, x2], y &lt;- [y1, y2]<br>定理：若a和b为正整数，则存在整数x,y使得<code>gcd(a,b)=ax+by</code></p><h4 id="代码示例-1"><a href="#代码示例-1" class="headerlink" title="代码示例"></a>代码示例</h4><figure class="highlight cpp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">gcd</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b, <span class="keyword">int</span>&amp; d, <span class="keyword">int</span>&amp; x, <span class="keyword">int</span>&amp; y)</span> </span>&#123;</div><div class="line">    <span class="keyword">if</span> (!b) &#123;</div><div class="line">        d = a;</div><div class="line">        x = <span class="number">1</span>;</div><div class="line">        y = <span class="number">0</span>;</div><div class="line">    &#125; <span class="keyword">else</span> &#123;</div><div class="line">        gcd(b, a % b, d, y, x);</div><div class="line">        y -= x * (a / b);</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure><h3 id="素数筛选"><a href="#素数筛选" class="headerlink" title="素数筛选"></a>素数筛选</h3><p><a href="http://acm.hdu.edu.cn/diy/contest_showproblem.php?pid=1001&amp;cid=32790" target="_blank" rel="noopener">题目</a></p><h4 id="代码示例-2"><a href="#代码示例-2" class="headerlink" title="代码示例"></a>代码示例</h4><figure class="highlight cpp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div></pre></td><td class="code"><pre><div class="line"><span class="comment">//一般判定是否是素数</span></div><div class="line"><span class="function"><span class="keyword">bool</span> <span class="title">is_prime</span><span class="params">(<span class="keyword">int</span> n)</span> </span>&#123;</div><div class="line"><span class="keyword">if</span> (n &lt; <span class="number">2</span>)</div><div class="line"><span class="keyword">return</span> <span class="literal">false</span>;</div><div class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">2</span>; i * i &lt;= n; i++) &#123;</div><div class="line"><span class="keyword">if</span> (n % i == <span class="number">0</span>)</div><div class="line"><span class="keyword">return</span> <span class="literal">false</span>;</div><div class="line">&#125;</div><div class="line"><span class="keyword">return</span> <span class="literal">true</span>;</div><div class="line">&#125;</div><div class="line"><span class="comment">//普通筛选n内的素数</span></div><div class="line"><span class="function"><span class="keyword">bool</span>* <span class="title">com_prime</span><span class="params">(<span class="keyword">int</span> n)</span> </span>&#123;</div><div class="line"><span class="keyword">bool</span>* ans = <span class="keyword">new</span> <span class="keyword">bool</span>[n];</div><div class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++) </div><div class="line">ans[i] = <span class="literal">false</span>;</div><div class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">2</span>; i &lt; n; i++) &#123;</div><div class="line"><span class="keyword">if</span> (is_prime(i))</div><div class="line">ans[i] = <span class="literal">true</span>;</div><div class="line">&#125;</div><div class="line"><span class="keyword">return</span> ans;</div><div class="line">&#125;</div></pre></td></tr></table></figure><h4 id="筛选法示例"><a href="#筛选法示例" class="headerlink" title="筛选法示例"></a>筛选法示例</h4><p>一、初始化如下列表。</p><p> 2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30</p><p>二、把第一个数（2）取出来，去掉所有可以被2整除的数。</p><p> 2  3     5     7     9    11    13    15    17    19    21    23    25    27    29</p><p>三、取第二个数（3），去掉所有可以被 3整除的数。</p><p> 2  3     5     7          11    13          17    19          23    25          29</p><p>四、取第三个数（5），因为4已经被去除了，再去掉所有可以被5整除的数。</p><p> 2  3     5     7          11    13          17    19          23                29</p><p>接下来的数是7，但是7的平方是49，其大于了30，所以我们可以停止计算了。剩下的数就是所有的质数了。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cmath&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> MAX 1000</span></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"><span class="function"><span class="keyword">bool</span> <span class="title">is_prime</span><span class="params">(<span class="keyword">int</span> n)</span> </span>&#123;</div><div class="line"><span class="keyword">if</span> (n &lt; <span class="number">2</span>)</div><div class="line"><span class="keyword">return</span> <span class="literal">false</span>;</div><div class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">2</span>; i * i &lt;= n; i++) &#123;</div><div class="line"><span class="keyword">if</span> (n % i == <span class="number">0</span>)</div><div class="line"><span class="keyword">return</span> <span class="literal">false</span>;</div><div class="line">&#125;</div><div class="line"><span class="keyword">return</span> <span class="literal">true</span>;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">bool</span>* <span class="title">sieve_prime</span><span class="params">(<span class="keyword">int</span> n)</span> </span>&#123;</div><div class="line"><span class="keyword">bool</span>* value = <span class="keyword">new</span> <span class="keyword">bool</span>[n];</div><div class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++)</div><div class="line">value[i] = <span class="literal">true</span>;</div><div class="line">value[<span class="number">0</span>] = <span class="literal">false</span>;</div><div class="line">value[<span class="number">1</span>] = <span class="literal">false</span>;</div><div class="line"></div><div class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">2</span>; i &lt;= <span class="built_in">sqrt</span>(n); i++) &#123;</div><div class="line"><span class="keyword">if</span> (value[i] &amp;&amp; is_prime(i)) &#123;</div><div class="line"><span class="keyword">int</span> c = <span class="number">2</span>;</div><div class="line"><span class="keyword">int</span> j = i * c;</div><div class="line"><span class="keyword">while</span> (j &lt; n) &#123;</div><div class="line">value[j] = <span class="literal">false</span>;</div><div class="line">j = i * c++;</div><div class="line">&#125;</div><div class="line">&#125;</div><div class="line">&#125;</div><div class="line"><span class="keyword">return</span> value;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</div><div class="line">    <span class="keyword">bool</span>* prime = sieve_prime(MAX);</div><div class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;=<span class="number">100</span>; i++) &#123; <span class="comment">//输出100内的素数</span></div><div class="line">        <span class="keyword">if</span> (prime[i])</div><div class="line">            <span class="built_in">cout</span> &lt;&lt; i &lt;&lt; <span class="built_in">endl</span>;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure><h2 id="欧拉函数"><a href="#欧拉函数" class="headerlink" title="欧拉函数"></a>欧拉函数</h2><p><strong>欧拉函数：</strong> 在数论中，对正整数n，欧拉函数φ(n)是小于或等于n的正整数中与n互质的数的数目。它又称为Euler’s totient function、φ函数、欧拉商数等。<br>例如 φ，因为1,3,5,7均和8互质。—— 维基百科</p><h3 id="定理"><a href="#定理" class="headerlink" title="定理"></a>定理</h3><ul><li>phi(1) = 1</li><li>n为质数, phi(n) = n - 1</li><li>m 和 n 互质, phi(mn) = phi(m) * phi(n)</li><li>n为奇数, phi(2n) = phi(n)</li><li>通用公式：<code>phi(n) = n * (1 - 1 / p1) * (1 - 1 / p2) * ... * (1 - 1 / pr)</code><br>其中 <code>n = p1^k1 * p2^k2 * ... * pr^kr</code></li><li><strong>具体参考：</strong> <a href="https://www.kancloud.cn/kancloud/rsa_algorithm/48486" target="_blank" rel="noopener">看云-欧拉函数</a></li></ul><h4 id="常规代码"><a href="#常规代码" class="headerlink" title="常规代码"></a>常规代码</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">int phi(int n) &#123;</div><div class="line">    int t = n;</div><div class="line">    for (int i = 2; i &lt;= n; i++) &#123;</div><div class="line">        if (n % i == 0) &#123;</div><div class="line">            n /= i;</div><div class="line">            t = t - t / i;</div><div class="line">        &#125;</div><div class="line">        while (n % i == 0)</div><div class="line">            n /= i;</div><div class="line">    &#125;</div><div class="line">    return t;</div><div class="line">&#125;</div></pre></td></tr></table></figure><p>时间复杂度O(n),对于1e9会超时。</p><h4 id="改良之后"><a href="#改良之后" class="headerlink" title="改良之后"></a>改良之后</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line">int phi(int n) &#123;</div><div class="line">    int t = n;</div><div class="line">    //降低时间复杂度</div><div class="line">    for (int  i = 2; i * i &lt;= n; i++) &#123;</div><div class="line">        if (n % i == 0) &#123;</div><div class="line">        n /= i;</div><div class="line">        t = t - t / i;</div><div class="line">        &#125;</div><div class="line">        while (n % i == 0) </div><div class="line">            n /= i;</div><div class="line">    &#125;</div><div class="line">    if (n &gt; 1)</div><div class="line">    t = t - t / n;</div><div class="line">    return t;</div><div class="line">&#125;</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;数论被“数学王子”高斯誉为整个数学王国的皇后&lt;/p&gt;
&lt;h2 id=&quot;欧几里得算法&quot;&gt;&lt;a href=&quot;#欧几里得算法&quot; class=&quot;headerlink&quot; title=&quot;欧几里得算法&quot;&gt;&lt;/a&gt;欧几里得算法&lt;/h2&gt;&lt;h3 id=&quot;最大公约数&quot;&gt;&lt;a href=&quot;#最大
      
    
    </summary>
    
    
      <category term="acm 数论" scheme="http://linraner.github.io/tags/acm-%E6%95%B0%E8%AE%BA/"/>
    
  </entry>
  
  <entry>
    <title>scanf中的正则表达式</title>
    <link href="http://linraner.github.io/2017/12/01/scanf%E4%B8%AD%E7%9A%84%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/"/>
    <id>http://linraner.github.io/2017/12/01/scanf中的正则表达式/</id>
    <published>2017-12-01T10:57:58.000Z</published>
    <updated>2018-01-06T14:02:48.249Z</updated>
    
    <content type="html"><![CDATA[<h4 id="调用格式-scanf-quot-lt-格式化字符串-gt-quot-lt-地址表-gt"><a href="#调用格式-scanf-quot-lt-格式化字符串-gt-quot-lt-地址表-gt" class="headerlink" title="调用格式: scanf(&quot;&lt;格式化字符串&gt;&quot;, &lt;地址表&gt;);"></a><strong>调用格式:</strong> <code>scanf(&quot;&lt;格式化字符串&gt;&quot;, &lt;地址表&gt;);</code></h4><p>一、为变量赋值时表示成功读取变量的个数, &lt;格式化字符串&gt;与&lt;地址表&gt;是严格匹配的</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">scanf</span>(<span class="string">"%c %c"</span>, &amp;a, &amp;b); <span class="comment">//函数返回值是2，并丢弃不想使用的空白符</span></div><div class="line"><span class="built_in">scanf</span>(<span class="string">"%d,%d"</span>, &amp;a, &amp;b); <span class="comment">//输入必须有逗号， 多个空格为一个空格</span></div></pre></td></tr></table></figure><p>二、 <code>%s</code> 读取遇到空格停止读取，因此一般可以用fgets去读取字符串</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">scanf</span>(<span class="string">"%[a-z]"</span>, &amp;str);  <span class="comment">//遇到不再a-z字符停止读取</span></div><div class="line"><span class="built_in">scanf</span>(<span class="string">"666%[0-9]"</span>, &amp;str);  <span class="comment">//666开头并且在0-9字符读取，不是则停止</span></div><div class="line"><span class="built_in">scanf</span>(<span class="string">"%[^\n]"</span>, &amp;str);     <span class="comment">//^表示求反集，即这句话不是回车一直开始读取</span></div></pre></td></tr></table></figure><p>三、压缩输入：在格式码前加上*，则用户就可以告诉scanf()读这个域，但不把它赋予任何变量。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">scanf</span>(<span class="string">"%c%*c, &amp;ch); 使用此方法可以在字符处理时吃掉多余的回车。</span></div></pre></td></tr></table></figure><p><a href="https://docs.microsoft.com/zh-cn/dotnet/standard/base-types/regular-expression-language-quick-reference" target="_blank" rel="noopener">更多正则表达式语言参考</a></p><h4 id="sscanf、scanf的一些示例"><a href="#sscanf、scanf的一些示例" class="headerlink" title="sscanf、scanf的一些示例"></a>sscanf、scanf的一些示例</h4><figure class="highlight cpp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"></div><div class="line"></div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h4 id=&quot;调用格式-scanf-quot-lt-格式化字符串-gt-quot-lt-地址表-gt&quot;&gt;&lt;a href=&quot;#调用格式-scanf-quot-lt-格式化字符串-gt-quot-lt-地址表-gt&quot; class=&quot;headerlink&quot; title=&quot;调用格式: 
      
    
    </summary>
    
    
      <category term="acm" scheme="http://linraner.github.io/tags/acm/"/>
    
  </entry>
  
  <entry>
    <title>Git问题：Everything up-to-date解决</title>
    <link href="http://linraner.github.io/2017/11/04/Git%E9%97%AE%E9%A2%98%EF%BC%9AEverything-up-to-date%E8%A7%A3%E5%86%B3/"/>
    <id>http://linraner.github.io/2017/11/04/Git问题：Everything-up-to-date解决/</id>
    <published>2017-11-04T04:39:28.000Z</published>
    <updated>2017-11-06T04:53:03.168Z</updated>
    
    <content type="html"><![CDATA[<p>push代码时遇到提示：<code>Everything up-to-date</code>,无法push代码<br>原因是git提交改动到缓存，要push的时候不会将本地所有的分支都push掉，所以出现这个问题。我们应该告诉git提交哪个分支。</p><h2 id="解决"><a href="#解决" class="headerlink" title="解决"></a>解决</h2><p>在<a href="https://stackoverflow.com/questions/2936652/git-push-wont-do-anything-everything-up-to-date" target="_blank" rel="noopener">stackoverflow</a>有解决方案</p><h3 id="创建分支"><a href="#创建分支" class="headerlink" title="创建分支"></a>创建分支</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">$ git branch newbranch</div><div class="line">#查看分支</div><div class="line">$ git branch</div></pre></td></tr></table></figure><h3 id="切换分支"><a href="#切换分支" class="headerlink" title="切换分支"></a>切换分支</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ git checkout newbranch</div></pre></td></tr></table></figure><h3 id="改动提交到新的分支"><a href="#改动提交到新的分支" class="headerlink" title="改动提交到新的分支"></a>改动提交到新的分支</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$ git add .</div><div class="line">$ git commit -a</div></pre></td></tr></table></figure><h3 id="合并到master"><a href="#合并到master" class="headerlink" title="合并到master"></a>合并到master</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">$ git merge newbranch</div><div class="line">#查看冲突</div><div class="line">$ git diff</div></pre></td></tr></table></figure><h3 id="push代码"><a href="#push代码" class="headerlink" title="push代码"></a>push代码</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ git push -u origin master</div></pre></td></tr></table></figure><h3 id="删除分支"><a href="#删除分支" class="headerlink" title="删除分支"></a>删除分支</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ git branch -D newbranch</div></pre></td></tr></table></figure><ul><li>删除合并部分大写D改为小写d</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;push代码时遇到提示：&lt;code&gt;Everything up-to-date&lt;/code&gt;,无法push代码&lt;br&gt;原因是git提交改动到缓存，要push的时候不会将本地所有的分支都push掉，所以出现这个问题。我们应该告诉git提交哪个分支。&lt;/p&gt;
&lt;h2 id=&quot;解
      
    
    </summary>
    
    
      <category term="skill" scheme="http://linraner.github.io/tags/skill/"/>
    
  </entry>
  
  <entry>
    <title>快速幂</title>
    <link href="http://linraner.github.io/2017/10/31/%E5%BF%AB%E9%80%9F%E5%B9%82/"/>
    <id>http://linraner.github.io/2017/10/31/快速幂/</id>
    <published>2017-10-31T10:57:58.000Z</published>
    <updated>2017-11-24T04:56:25.153Z</updated>
    
    <content type="html"><![CDATA[<h3 id="快速幂"><a href="#快速幂" class="headerlink" title="快速幂"></a>快速幂</h3><p><img src="http://oxqn1kqf7.bkt.clouddn.com/17-10-31/1725298.jpg" alt=""></p><p>通常算法：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">int Pow(int A, int n)</div><div class="line">&#123;</div><div class="line">    if(n == 0) </div><div class="line">        return 1;</div><div class="line">    int rslt(1);</div><div class="line">    for(int i(0); i &lt; n; ++i)</div><div class="line">        rslt *= A;</div><div class="line">    return rslt;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p><p>其复杂度是O(n)的。一般来说，这样的复杂度并不会使我们困惑，但是一般应用幂运算的地方，指数都会非常非常的大，比如1 000 000 000这个级别的，这时候我们会遇到两个问题，第一个就是我们不能再用int来存储整数，必须用高精度整数类型来进行存储，另一个就是在指数是如此变态的数量级之下，我们的计算量会骤然上升，结果也会异常惊人的大。简单来说就是二分法。<br>举个栗子：<br>一般解法：<br><code>A^8 = A * A * A * A * A * A * A * A</code><br>总共需要7次乘法运算</p><p>平均分解：<br><code>A^8 = (A * A * A * A) * (A * A * A * A) = (A * A * A * A) ^ 2</code><br>这样我们就只需要4次乘法运算</p><p>再分解：<br><code>A^6 = [(A * A) * (A * A)] ^ 2 = [(A * A) ^ 2] ^ 2</code><br>这样就将乘法运算的次数减少为了3次</p><p>这种二分解法可以将原本n次的运算减少为logn / log2，这样的效果是惊人的，在1 000 000 000这样数量级的指数运算下，该方法可以将运算次数减少到30次</p><p>整数的快速幂：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line">int qPow(int A, int n)</div><div class="line">&#123;</div><div class="line">    if(n == 0) </div><div class="line">        return 1;</div><div class="line">    int rslt(1);</div><div class="line"></div><div class="line">    while(n)</div><div class="line">    &#123;</div><div class="line">        if(n &amp; 1) // 若幂为奇数</div><div class="line">        &#123;</div><div class="line">            rslt *= A;</div><div class="line">        &#125;</div><div class="line">        A *= A;</div><div class="line">        n &gt;&gt;= 1; // 右位移等价于除以2</div><div class="line">    &#125;</div><div class="line">    return rslt;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p><p>矩阵类的代码：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div></pre></td><td class="code"><pre><div class="line">class Matrix</div><div class="line">&#123;</div><div class="line">public:</div><div class="line">    int N; // 矩阵维数</div><div class="line">    int** m; // 存储矩阵的二维数组</div><div class="line"></div><div class="line">    Matrix(int n = 2)</div><div class="line">    &#123;</div><div class="line">        m = new int*[n];</div><div class="line">        for(int i(0); i &lt; n; ++i)</div><div class="line">        &#123;</div><div class="line">            m[i] = new int[n];</div><div class="line">        &#125;</div><div class="line">        N = n;</div><div class="line">        clear();</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    // 将矩阵清空为零矩阵</div><div class="line">    void clear()</div><div class="line">    &#123;</div><div class="line">        for(int i(0); i &lt; N; ++i)</div><div class="line">        &#123;</div><div class="line">            memset(m[i], 0, sizeof(int) * N);</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    // 将矩阵设定为单位矩阵</div><div class="line">    void unit()</div><div class="line">    &#123;</div><div class="line">        clear();</div><div class="line">        for(int i(0); i &lt; N; ++i)</div><div class="line">        &#123;</div><div class="line">            m[i][i] = 1;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    // 矩阵的赋值</div><div class="line">    Matrix operator= (Matrix &amp;othr)</div><div class="line">    &#123;</div><div class="line">        Matrix(othr.N);</div><div class="line">        for(int i(0); i &lt; othr.N; ++i)</div><div class="line">        &#123;</div><div class="line">            for(int j(0); j &lt; othr.N; ++j)</div><div class="line">            &#123;</div><div class="line">                m[i][j] = othr.m[i][j];</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">        return *this;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    // 矩阵的乘法</div><div class="line">    //!假设所有因子均为同阶方阵</div><div class="line">    Matrix operator* (Matrix &amp;othr)</div><div class="line">    &#123;</div><div class="line">        Matrix rslt(othr.N);</div><div class="line">        for(int i(0); i &lt; othr.N; ++i)</div><div class="line">        &#123;</div><div class="line">            for(int j(0); j &lt; othr.N; ++j)</div><div class="line">            &#123;</div><div class="line">                for(int k(0); k &lt; othr.N; ++k)</div><div class="line">                &#123;</div><div class="line">                    rslt.m[i][j] += m[i][k] * othr.m[k][j];</div><div class="line">                &#125;</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">        return rslt;</div><div class="line">    &#125;</div><div class="line">&#125;;</div></pre></td></tr></table></figure></p><p>矩阵快速幂的算法:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line">Matrix qMPow(Matrix &amp;A, int n)</div><div class="line">&#123;</div><div class="line">    Matrix rslt(A.N);</div><div class="line">    rslt.unit();</div><div class="line">    if(n == 0) return rslt;</div><div class="line">    while(n)</div><div class="line">    &#123;</div><div class="line">        if(n &amp; 1) // 若幂为奇数</div><div class="line">        &#123;</div><div class="line">            rslt = rslt * A;</div><div class="line">        &#125;</div><div class="line">        A = A * A;</div><div class="line">        n &gt;&gt;= 1; // 右位移等价于除以2</div><div class="line">    &#125;</div><div class="line">    return rslt;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;快速幂&quot;&gt;&lt;a href=&quot;#快速幂&quot; class=&quot;headerlink&quot; title=&quot;快速幂&quot;&gt;&lt;/a&gt;快速幂&lt;/h3&gt;&lt;p&gt;&lt;img src=&quot;http://oxqn1kqf7.bkt.clouddn.com/17-10-31/1725298.jpg&quot; a
      
    
    </summary>
    
    
      <category term="acm" scheme="http://linraner.github.io/tags/acm/"/>
    
  </entry>
  
  <entry>
    <title>conda常用操作(windows)</title>
    <link href="http://linraner.github.io/2017/10/28/conda%E5%B8%B8%E7%94%A8%E6%93%8D%E4%BD%9C/"/>
    <id>http://linraner.github.io/2017/10/28/conda常用操作/</id>
    <published>2017-10-28T02:22:46.000Z</published>
    <updated>2017-10-31T11:22:28.548Z</updated>
    
    <content type="html"><![CDATA[<h2 id="管理conda"><a href="#管理conda" class="headerlink" title="管理conda"></a>管理conda</h2><h3 id="验证安装"><a href="#验证安装" class="headerlink" title="验证安装"></a>验证安装</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ conda --version</div></pre></td></tr></table></figure><p>命令参阅可以用: conda –help</p><h3 id="将conda更新到最新"><a href="#将conda更新到最新" class="headerlink" title="将conda更新到最新"></a>将conda更新到最新</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">$ conda update conda</div><div class="line">#有最新选择yes</div><div class="line">Proceed ([y]/n)? y</div></pre></td></tr></table></figure><h2 id="管理环境"><a href="#管理环境" class="headerlink" title="管理环境"></a>管理环境</h2><h3 id="创建环境"><a href="#创建环境" class="headerlink" title="创建环境"></a>创建环境</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">$ conda create --name snowflakes biopython</div><div class="line">#也可以指定python版本并安装Astroid和Babel</div><div class="line">$ conda create --name snowflakes python3.5 astroid babel</div></pre></td></tr></table></figure><p>使用biopython创建一个snowflakes的环境</p><ul><li>不指定目录即为默认目录/envs</li></ul><h3 id="使用环境"><a href="#使用环境" class="headerlink" title="使用环境"></a>使用环境</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">$ activate newen</div><div class="line">#切换回根目录</div><div class="line">$ deactivate</div></pre></td></tr></table></figure><h3 id="显示安装过的环境"><a href="#显示安装过的环境" class="headerlink" title="显示安装过的环境"></a>显示安装过的环境</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ conda info --envs</div></pre></td></tr></table></figure><p><img src="http://oxqn1kqf7.bkt.clouddn.com/17-10-28/22089148.jpg" alt="显示安装过的环境"><br>括号显示为当前环境<br><img src="http://oxqn1kqf7.bkt.clouddn.com/17-10-28/43734134.jpg" alt="括号显示为当前环境"></p><h3 id="切换到另一个环境"><a href="#切换到另一个环境" class="headerlink" title="切换到另一个环境"></a>切换到另一个环境</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ activate another_environment</div></pre></td></tr></table></figure><h3 id="克隆删除环境"><a href="#克隆删除环境" class="headerlink" title="克隆删除环境"></a>克隆删除环境</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">#克隆</div><div class="line">$ conda create --name flowers --clone snowflakes</div><div class="line">#删除</div><div class="line">$ conda remove --name flowers --all</div></pre></td></tr></table></figure><h2 id="管理Python"><a href="#管理Python" class="headerlink" title="管理Python"></a>管理Python</h2><h3 id="检查可安装的python版本"><a href="#检查可安装的python版本" class="headerlink" title="检查可安装的python版本"></a>检查可安装的python版本</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">$ conda search --full-name python</div><div class="line">#列出包含python的所有包</div><div class="line">$ conda search python</div></pre></td></tr></table></figure><h3 id="安装python3环境并不覆盖python2"><a href="#安装python3环境并不覆盖python2" class="headerlink" title="安装python3环境并不覆盖python2"></a>安装python3环境并不覆盖python2</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ conda create --name snackes pyhton=3</div></pre></td></tr></table></figure><h2 id="包管理"><a href="#包管理" class="headerlink" title="包管理"></a>包管理</h2><h3 id="看安装的包和版本列表"><a href="#看安装的包和版本列表" class="headerlink" title="看安装的包和版本列表"></a>看安装的包和版本列表</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ conda list</div></pre></td></tr></table></figure><h3 id="查找、安装、删除"><a href="#查找、安装、删除" class="headerlink" title="查找、安装、删除"></a>查找、安装、删除</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">$ conda search beautifulsoup4</div><div class="line">$ conda install --name snowflakes beautifulsoup4    #未指定位置安装在当前位置</div><div class="line">$ conda remove --name snowflakes beautifulsoup4</div></pre></td></tr></table></figure><h3 id="从Anaconda-org安装包"><a href="#从Anaconda-org安装包" class="headerlink" title="从Anaconda.org安装包"></a>从Anaconda.org安装包</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ conda install --channel https://conda.anaconda.org/pandas bottleneck</div></pre></td></tr></table></figure><ul><li><strong>更多命令具体参考：</strong><a href="https://conda.io/docs/user-guide/tasks/view-command-line-help.html" target="_blank" rel="noopener">Getting started</a></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;管理conda&quot;&gt;&lt;a href=&quot;#管理conda&quot; class=&quot;headerlink&quot; title=&quot;管理conda&quot;&gt;&lt;/a&gt;管理conda&lt;/h2&gt;&lt;h3 id=&quot;验证安装&quot;&gt;&lt;a href=&quot;#验证安装&quot; class=&quot;headerlink&quot; titl
      
    
    </summary>
    
    
      <category term="skill" scheme="http://linraner.github.io/tags/skill/"/>
    
  </entry>
  
  <entry>
    <title>初学使用Github</title>
    <link href="http://linraner.github.io/2017/10/24/%E5%88%9D%E5%AD%A6%E4%BD%BF%E7%94%A8Github/"/>
    <id>http://linraner.github.io/2017/10/24/初学使用Github/</id>
    <published>2017-10-24T05:27:03.000Z</published>
    <updated>2017-10-31T11:53:44.063Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Git使用规范流程"><a href="#Git使用规范流程" class="headerlink" title="Git使用规范流程"></a>Git使用规范流程</h2><p>Git是一个源码管理系统<br>我采取ThoughtBot的Git使用规范流程</p><h3 id="第一步：新建分支"><a href="#第一步：新建分支" class="headerlink" title="第一步：新建分支"></a>第一步：新建分支</h3><p>每次开发新功能，都应该新建一个单独的分支。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">#获取主干最新代码</div><div class="line">$ git checkout master</div><div class="line">$ git pull</div><div class="line"></div><div class="line">#新建开发分支</div><div class="line">$ git checkout -b afeature</div></pre></td></tr></table></figure></p><h3 id="第二步：提交分支commit"><a href="#第二步：提交分支commit" class="headerlink" title="第二步：提交分支commit"></a>第二步：提交分支commit</h3><p>分支修改后，提交commit<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">#all为保存所有变化(包括新建、修改和删除)</div><div class="line">$ git add --all</div><div class="line">#查看发生变动的文件。</div><div class="line">$ git status</div><div class="line">#verbose会列出diff的结果</div><div class="line">$ git commit --verbose</div></pre></td></tr></table></figure></p><ul><li>diff是Unix系统的一个很重要的工具程序，具体见：<a href="http://www.ruanyifeng.com/blog/2012/08/how_to_read_diff.html" target="_blank" rel="noopener">读懂diff - 阮一峰的网络日志</a></li></ul><h3 id="第三步：撰写提交信息"><a href="#第三步：撰写提交信息" class="headerlink" title="第三步：撰写提交信息"></a>第三步：撰写提交信息</h3><p>提交commit时，必须给出完整扼要的提交信息。以下是一个范本：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">Persent-tense summary under 50 characters</div><div class="line">*More information about commit(under 72 characters)</div><div class="line">*More information about commit(under 72 characters)</div><div class="line">http://project.management-system.com/ticket/123</div></pre></td></tr></table></figure></p><p>第一行是不超过50个字的提要，然后空一行，罗列出改动原因、主要变动、需要注意的问题。最后，提供对应的网址。</p><h3 id="第四步：与主干同步"><a href="#第四步：与主干同步" class="headerlink" title="第四步：与主干同步"></a>第四步：与主干同步</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$ git fetch orgin</div><div class="line">$ git rebase orgin/master</div></pre></td></tr></table></figure><h3 id="第五步：合并commit"><a href="#第五步：合并commit" class="headerlink" title="第五步：合并commit"></a>第五步：合并commit</h3><p>分支开发完成后，很可能有一堆commit，但是合并到主干的时候，往往希望只有一个(或最多两三个) commit，这样不仅清晰，也容易管理。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ git rebase -i origin/master</div></pre></td></tr></table></figure></p><ul><li>具体参考：<a href="http://www.ruanyifeng.com/blog/2015/08/git-use-process.html" target="_blank" rel="noopener">Git 使用规范流程</a></li></ul><h3 id="第六步：推送到远程仓库"><a href="#第六步：推送到远程仓库" class="headerlink" title="第六步：推送到远程仓库"></a>第六步：推送到远程仓库</h3><p>合并commit，推送当前分支到远程仓库。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ git push --force origin myfeature</div></pre></td></tr></table></figure></p><h3 id="第七步：发出Pull-Request"><a href="#第七步：发出Pull-Request" class="headerlink" title="第七步：发出Pull Request"></a>第七步：发出Pull Request</h3><p>提交到远程仓库以后，就可以发出Pull Request 到master 分支，然后请求别人进行代码review，确认可以合并到master。</p><h2 id="Git常用操作"><a href="#Git常用操作" class="headerlink" title="Git常用操作"></a>Git常用操作</h2><p><img src="http://oxqn1kqf7.bkt.clouddn.com/17-10-26/83204462.jpg" alt=""></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;Git使用规范流程&quot;&gt;&lt;a href=&quot;#Git使用规范流程&quot; class=&quot;headerlink&quot; title=&quot;Git使用规范流程&quot;&gt;&lt;/a&gt;Git使用规范流程&lt;/h2&gt;&lt;p&gt;Git是一个源码管理系统&lt;br&gt;我采取ThoughtBot的Git使用规范流程&lt;/p
      
    
    </summary>
    
    
      <category term="skill" scheme="http://linraner.github.io/tags/skill/"/>
    
  </entry>
  
  <entry>
    <title>通向外网的梯子</title>
    <link href="http://linraner.github.io/2017/10/22/%E9%80%9A%E5%90%91%E5%A4%96%E7%BD%91%E7%9A%84%E6%A2%AF%E5%AD%90/"/>
    <id>http://linraner.github.io/2017/10/22/通向外网的梯子/</id>
    <published>2017-10-22T13:15:07.000Z</published>
    <updated>2017-10-27T10:37:17.255Z</updated>
    
    <content type="html"><![CDATA[<p>能来到这里想必你已翻出来了，也就没什么说的</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;能来到这里想必你已翻出来了，也就没什么说的&lt;/p&gt;

      
    
    </summary>
    
    
      <category term="工具" scheme="http://linraner.github.io/tags/%E5%B7%A5%E5%85%B7/"/>
    
  </entry>
  
  <entry>
    <title>Jupyter NoteBook常用快捷键</title>
    <link href="http://linraner.github.io/2017/10/21/Jupyter-NoteBook%E5%B8%B8%E7%94%A8%E5%BF%AB%E6%8D%B7%E9%94%AE/"/>
    <id>http://linraner.github.io/2017/10/21/Jupyter-NoteBook常用快捷键/</id>
    <published>2017-10-21T07:39:41.000Z</published>
    <updated>2017-10-31T11:53:38.580Z</updated>
    
    <content type="html"><![CDATA[<p>Jupyter Notebook 有两种键盘输入模式，命令模式和编辑模式。与Vim类似。</p><p>命令模式按<strong>Esc</strong>进入，编辑模式按<strong>Enter</strong>进入</p><h4 id="命令模式快捷键"><a href="#命令模式快捷键" class="headerlink" title="命令模式快捷键"></a>命令模式快捷键</h4><table><thead><tr><th>快捷键</th><th>作用</th></tr></thead><tbody><tr><td>Shift+Enter</td><td>运行本单元，选中下一个单元</td></tr><tr><td>Ctrl+Enter</td><td>运行本单元</td></tr><tr><td>Alt+Enter</td><td>运行本单元在下插入新单元</td></tr><tr><td>Y</td><td>单元转入代码状态</td></tr><tr><td>M</td><td>单元转入markdown状态</td></tr><tr><td>R</td><td>单元转入raw状态</td></tr><tr><td>Up&amp;K/Down&amp;J</td><td>选中上方/下方单元</td></tr><tr><td>Shift+K/J</td><td>连续选择上方/下方单元</td></tr><tr><td>A/B</td><td>在上方/下方插入新单元</td></tr><tr><td>x/C</td><td>剪切/复制选中单元</td></tr><tr><td>Shift+V/V</td><td>粘贴到上方/下方单元</td></tr><tr><td>Z</td><td>恢复删除的最后一个单元</td></tr><tr><td>DD</td><td>删除选中的单元</td></tr><tr><td>Shift+M</td><td>合并选中的单元</td></tr><tr><td>Ctrl+S/S</td><td>保存当前文件</td></tr><tr><td>L</td><td>开关行号</td></tr><tr><td>O</td><td>转换输出</td></tr><tr><td>Shift+O</td><td>转换输出滚动</td></tr><tr><td>Esc/Q</td><td>关闭页面</td></tr><tr><td>H</td><td>显示快捷帮助</td></tr><tr><td>II/00</td><td>中断/重启NOteBook内核</td></tr><tr><td>Shift+Space/Space</td><td>向上/下滚动</td></tr></tbody></table><h4 id="编辑模式快捷键"><a href="#编辑模式快捷键" class="headerlink" title="编辑模式快捷键"></a>编辑模式快捷键</h4><table><thead><tr><th>快捷键</th><th>作用</th></tr></thead><tbody><tr><td>Tab</td><td>代码补全或者缩进</td></tr><tr><td>Shift+Tab</td><td>提示</td></tr><tr><td>Ctrl+]</td><td>向右缩进</td></tr><tr><td>Ctrl+[</td><td>向左缩进</td></tr><tr><td>Ctrl+Shift+Z/Ctrl+Y</td><td>重做</td></tr><tr><td>Ctrl+up/down</td><td>跳到单元开头/末尾</td></tr><tr><td>Ctrl+Left/Right</td><td>跳到左边/右边一个字首</td></tr><tr><td>Ctrl+BackSpace/Delete</td><td>删除前面一个字</td></tr><tr><td>Shift+Enter</td><td>运行本单元，选中下一个单元</td></tr><tr><td>Ctrl+M</td><td>切换到命令模式</td></tr><tr><td>Ctrl+Enter</td><td>运行本单元</td></tr><tr><td>Alt+Enter</td><td>运行本单元在下插入新单元</td></tr><tr><td>Ctrl+/</td><td>注释整行或者取消注释</td></tr></tbody></table>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Jupyter Notebook 有两种键盘输入模式，命令模式和编辑模式。与Vim类似。&lt;/p&gt;
&lt;p&gt;命令模式按&lt;strong&gt;Esc&lt;/strong&gt;进入，编辑模式按&lt;strong&gt;Enter&lt;/strong&gt;进入&lt;/p&gt;
&lt;h4 id=&quot;命令模式快捷键&quot;&gt;&lt;a hre
      
    
    </summary>
    
    
      <category term="skill" scheme="http://linraner.github.io/tags/skill/"/>
    
  </entry>
  
  <entry>
    <title>Windows上好用的软件</title>
    <link href="http://linraner.github.io/2017/10/14/Windows%E4%B8%8A%E5%A5%BD%E7%94%A8%E7%9A%84%E8%BD%AF%E4%BB%B6/"/>
    <id>http://linraner.github.io/2017/10/14/Windows上好用的软件/</id>
    <published>2017-10-14T15:15:47.000Z</published>
    <updated>2017-10-27T10:37:44.036Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Wox"><a href="#Wox" class="headerlink" title="Wox"></a>Wox</h2><p><strong><a href="https://github.com/Wox-launcher/Wox" target="_blank" rel="noopener">Wox</a>：</strong>是开源免费强大的快捷启动器辅助工具，快速高效率打开软件,搜索文件<br>打开输入框：alt + space</p><ul><li>同类软件也有:   <strong> <a href="http://www.listary.com/" target="_blank" rel="noopener">Listary</a></strong>  ,  <strong><a href="http://www.irolan.com/" target="_blank" rel="noopener">Rolan</a></strong></li></ul><h2 id="包管理工具"><a href="#包管理工具" class="headerlink" title="包管理工具"></a>包管理工具</h2><p><strong><a href="https://chocolatey.org/" target="_blank" rel="noopener">Chocolatey</a>：</strong>如果你认为没有包管理的操作系统是反人类的就用这个吧，Chocolatey 这套包管理系统目前已经包含了近 500 多款常用软件，常用的有Sublime text,git,Google Chrome······</p><h2 id="cmder"><a href="#cmder" class="headerlink" title="cmder"></a>cmder</h2><p><strong><a href="http://cmder.net/" target="_blank" rel="noopener">cmder</a>：</strong>  不多说，windows命令行神器，支持tab补全，支持了大部分的Linux命令······</p><h2 id="文本编辑器"><a href="#文本编辑器" class="headerlink" title="文本编辑器"></a>文本编辑器</h2><p><strong><a href="https://www.sublimetext.com/" target="_blank" rel="noopener">Sublime text3</a>：</strong>基于 Python 语言的外挂 API,跨平台（Windows、Linux 和 Mac OS X）,兼容 TextMate 的语言标记语法。<br>关于软件的配置方面见：<strong><a href="https://jeffjade.com/2015/12/15/2015-04-17-toss-sublime-text/" target="_blank" rel="noopener">这里</a></strong><br><strong>sublime text 3 3143 license</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">—– BEGIN LICENSE —–</div><div class="line">TwitterInc</div><div class="line">200 User License</div><div class="line">EA7E-890007</div><div class="line">1D77F72E 390CDD93 4DCBA022 FAF60790</div><div class="line">61AA12C0 A37081C5 D0316412 4584D136</div><div class="line">94D7F7D4 95BC8C1C 527DA828 560BB037</div><div class="line">D1EDDD8C AE7B379F 50C9D69D B35179EF</div><div class="line">2FE898C4 8E4277A8 555CE714 E1FB0E43</div><div class="line">D5D52613 C3D12E98 BC49967F 7652EED2</div><div class="line">9D2D2E61 67610860 6D338B72 5CF95C69</div><div class="line">E36B85CC 84991F19 7575D828 470A92AB</div><div class="line">—— END LICENSE ——</div></pre></td></tr></table></figure><h4 id="同类也有："><a href="#同类也有：" class="headerlink" title="同类也有："></a>同类也有：</h4><ul><li><strong><a href="https://atom.io/" target="_blank" rel="noopener">Atom</a>：</strong>Atom是由GitHub开发的自由及开放源代码的文字与代码编辑器，支持OS X、Windows和Linux操作系统，支持Node.js所写的插件，并内置Git版本控制系统。(维基百科)，插件需要科学上网</li><li><strong><a href="https://code.visualstudio.com/" target="_blank" rel="noopener">VS Code</a>：</strong>毕竟宇宙级的</li><li><strong><a href="https://notepad-plus-plus.org/" target="_blank" rel="noopener">Notepad++</a>：</strong>Notepad++，由台湾人侯今吾基于同是开放源代码的Scintilla文本编辑组件并独力研发，整个项目托管于SourceForge.net之上，并两度获得SourceForge社区选择奖——最佳开发工具。（维基百科）</li></ul><h2 id="IDE"><a href="#IDE" class="headerlink" title="IDE"></a>IDE</h2><p>没什么说的，大多数网上都能下载，<strong><a href="https://account.jetbrains.com" target="_blank" rel="noopener">JetBrains</a></strong>家的东西都不错，由于对学生免费，即用教育网邮箱注册，就能获得大学在校的使用时间，分享一个用于接收EDU邮箱的网站：<strong><a href="http://mail.anime.edu.gr:3000/" target="_blank" rel="noopener">点击这里</a></strong></p><p>待续—–</p><ul><li><strong>注：</strong>0x13哒的缘故，上面网址有的需要突破GFW的封锁，科学上网详见：<a href="https://linraner.github.io/2017/10/22/%E9%80%9A%E5%90%91%E5%A4%96%E7%BD%91%E7%9A%84%E6%A2%AF%E5%AD%90/">这里</a></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;Wox&quot;&gt;&lt;a href=&quot;#Wox&quot; class=&quot;headerlink&quot; title=&quot;Wox&quot;&gt;&lt;/a&gt;Wox&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://github.com/Wox-launcher/Wox&quot; target=&quot;_bla
      
    
    </summary>
    
    
      <category term="工具" scheme="http://linraner.github.io/tags/%E5%B7%A5%E5%85%B7/"/>
    
  </entry>
  
  <entry>
    <title>github+hexo搭建博客</title>
    <link href="http://linraner.github.io/2017/10/13/github-hexo%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2/"/>
    <id>http://linraner.github.io/2017/10/13/github-hexo搭建博客/</id>
    <published>2017-10-13T11:36:16.000Z</published>
    <updated>2017-10-31T11:22:30.545Z</updated>
    
    <content type="html"><![CDATA[<p>Hexo是一款基于Node.js的静态博客框架，依赖少易于安装使用，可以方便的生成静态网页。</p><h3 id="准备"><a href="#准备" class="headerlink" title="准备"></a>准备</h3><ul><li><strong>Node.js：</strong><a href="http://nodejs.cn/download/" target="_blank" rel="noopener">点击</a></li><li><strong>Github账号：</strong><a href="https://github.com" target="_blank" rel="noopener">点击注册</a></li><li><strong>Git：</strong><a href="https://git-scm.com/downloads" target="_blank" rel="noopener">点击</a></li><li><strong>Windows</strong><h3 id="Node-js"><a href="#Node-js" class="headerlink" title="Node.js"></a>Node.js</h3>在命令行输入:<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$ node -v</div><div class="line">$ npm -v</div></pre></td></tr></table></figure></li></ul><p><br>显示版本信息即可进行下一步</p><h3 id="Git配置"><a href="#Git配置" class="headerlink" title="Git配置"></a>Git配置</h3><p><a href="https://git-scm.com/doc" target="_blank" rel="noopener">文档</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Hexo是一款基于Node.js的静态博客框架，依赖少易于安装使用，可以方便的生成静态网页。&lt;/p&gt;
&lt;h3 id=&quot;准备&quot;&gt;&lt;a href=&quot;#准备&quot; class=&quot;headerlink&quot; title=&quot;准备&quot;&gt;&lt;/a&gt;准备&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;No
      
    
    </summary>
    
    
      <category term="blog" scheme="http://linraner.github.io/tags/blog/"/>
    
  </entry>
  
</feed>
